name: Build, Package and Deploy Spring Boot App with HTTPS

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        working-directory: ./backend
        run: mvn clean package -DskipTests

      - name: Create SSL keystore file for deployment
        working-directory: ./backend
        run: |
          echo "${{ secrets.SSL_KEYSTORE_BASE64 }}" | base64 --decode > src/main/resources/keystore.p12
          
      - name: Create app.yaml for App Engine
        working-directory: ./backend
        env:
          DATABASE_ADDRESS: ${{ secrets.DATABASE_ADDRESS }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          JWT_SERVER_KEY: ${{ secrets.JWT_SERVER_KEY }}
          GITLAB_INSTANCE_ADDRESS: ${{ secrets.GITLAB_INSTANCE_ADDRESS }}
          GITLAB_INSTANCE_CLIENT_ID: ${{ secrets.GITLAB_INSTANCE_CLIENT_ID }}
          GITLAB_INSTANCE_CLIENT_SECRET: ${{ secrets.GITLAB_INSTANCE_CLIENT_SECRET }}
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
        run: |
          cat > app.yaml <<EOF
          runtime: java17
          automatic_scaling:
            min_instances: 1
            max_instances: 1
            max_pending_latency: automatic
            max_concurrent_requests: 50
          env_variables:
            SPRING_PROFILES_ACTIVE: prod
            DATABASE_ADDRESS: "$DATABASE_ADDRESS"
            DATABASE_NAME: "$DATABASE_NAME"
            DATABASE_USERNAME: "$DATABASE_USERNAME"
            DATABASE_PASSWORD: "$DATABASE_PASSWORD"
            JWT_SERVER_KEY: "$JWT_SERVER_KEY"
            GITLAB_INSTANCE_ADDRESS: "$GITLAB_INSTANCE_ADDRESS"
            GITLAB_INSTANCE_CLIENT_ID: "$GITLAB_INSTANCE_CLIENT_ID"
            GITLAB_INSTANCE_CLIENT_SECRET: "$GITLAB_INSTANCE_CLIENT_SECRET"
            SERVER_ADDRESS: "$SERVER_ADDRESS"
            SERVER_PORT: "$SERVER_PORT"
          EOF

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Deploy to App Engine
        uses: google-github-actions/deploy-appengine@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          deliverables: ./backend/app.yaml
          promote: true
          flags: --verbosity debug

      - name: Clean up keystore file
        if: always()
        run: rm -f ./backend/src/main/resources/keystore.p12