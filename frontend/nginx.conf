events {}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 5173;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        location ^~ /Event-Exchange-Platform/ {
            alias /usr/share/nginx/html/;
            index index.html;
            # Try to serve the file, else redirect
            try_files $uri $uri/ @redirect_base;
        }

        location @redirect_base {
            return 302 /Event-Exchange-Platform/;
        }

        # Gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Caching for static assets
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?)$ {
            expires 30d;
            access_log off;
            add_header Cache-Control "public";
        }

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        # === Strict Transport Security (only for HTTPS) ===
        # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # === Content Security Policy (CSP) ===
        # blocks all inline scripts and styles.
        add_header Content-Security-Policy "
                                      default-src 'self';
                                      script-src 'self' 'unsafe-inline' 'unsafe-eval';
                                      style-src 'self' 'unsafe-inline';
                                      font-src 'self';
                                      img-src 'self' data: ${VITE_API_ORIGIN};
                                      connect-src 'self' ${VITE_API_ORIGIN};
                                      object-src 'none';
                                      base-uri 'self';
                                      frame-ancestors 'none';
                                      " always;

        # === Referrer Policy ===
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # === Permissions Policy to disable the following ===
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # === Remove 'Server' header for obscurity ===
        server_tokens off;

    }
}
